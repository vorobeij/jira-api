/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * The details of a UI modification's context, which define where to activate the UI modification.
 *
 * @param id, optional, The ID of the UI modification context.
 * @param isAvailable, optional, Whether a context is available. For example, when a project is deleted the context becomes unavailable.
 * @param issueTypeId, optional, The issue type ID of the context. Null is treated as a wildcard, meaning the UI modification will be applied to all issue types. Each UI modification context can have a maximum of one wildcard.
 * @param projectId, optional, The project ID of the context. Null is treated as a wildcard, meaning the UI modification will be applied to all projects. Each UI modification context can have a maximum of one wildcard.
 * @param viewType, optional, The view type of the context. Only `GIC`(Global Issue Create), `IssueView` and `IssueTransition` are supported. Null is treated as a wildcard, meaning the UI modification will be applied to all view types. Each UI modification context can have a maximum of one wildcard.
 */
@Serializable
data class UiModificationContextDetails(
    @SerialName("id") val id: String? = null,
    @SerialName("isAvailable") val isAvailable: Boolean? = null,
    @SerialName("issueTypeId") val issueTypeId: String? = null,
    @SerialName("projectId") val projectId: String? = null,
    @SerialName("viewType") val viewType: String? = null
)