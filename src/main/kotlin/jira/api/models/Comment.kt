/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.models

import kotlinx.serialization.*

/**
 * A comment.
 *
 * @param author, optional, The ID of the user who created the comment.
 * @param body, optional, The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).
 * @param created, optional, The date and time at which the comment was created.
 * @param id, optional, The ID of the comment.
 * @param jsdAuthorCanSeeRequest, optional, Whether the comment was added from an email sent by a person who is not part of the issue. See [Allow external emails to be added as comments on issues](https://support.atlassian.com/jira-service-management-cloud/docs/allow-external-emails-to-be-added-as-comments-on-issues/)for information on setting up this feature.
 * @param jsdPublic, optional, Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.
 * @param properties, optional, A list of comment properties. Optional on create and update.
 * @param renderedBody, optional, The rendered version of the comment.
 * @param self, optional, The URL of the comment.
 * @param updateAuthor, optional, The ID of the user who updated the comment last.
 * @param updated, optional, The date and time at which the comment was updated last.
 * @param visibility, optional, The group or role to which this comment is visible. Optional on create and update.
 */
@Serializable
data class Comment(
    @SerialName("author") val author: author? = null,
    @SerialName("body") val body: body? = null,
    @SerialName("created") val created: String? = null,
    @SerialName("id") val id: String? = null,
    @SerialName("jsdAuthorCanSeeRequest") val jsdAuthorCanSeeRequest: Boolean? = null,
    @SerialName("jsdPublic") val jsdPublic: Boolean? = null,
    @SerialName("properties") val properties: List<EntityProperty>? = null,
    @SerialName("renderedBody") val renderedBody: String? = null,
    @SerialName("self") val self: String? = null,
    @SerialName("updateAuthor") val updateAuthor: updateAuthor? = null,
    @SerialName("updated") val updated: String? = null,
    @SerialName("visibility") val visibility: visibility? = null
)