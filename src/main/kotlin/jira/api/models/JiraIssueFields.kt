/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 *
 * @param cascadingSelectFields, optional, Add or clear a cascading select field:

 *  To add, specify `optionId` for both parent and child.
 *  To clear the child, set its `optionId` to null.
 *  To clear both, set the parent's `optionId` to null.
 * @param clearableNumberFields, optional, Add or clear a number field:

 *  To add, specify a numeric `value`.
 *  To clear, set `value` to `null`.
 * @param colorFields, optional, Add or clear a color field:

 *  To add, specify the color `name`. Available colors are: `purple`, `blue`, `green`, `teal`, `yellow`, `orange`, `grey`, `dark purple`, `dark blue`, `dark green`, `dark teal`, `dark yellow`, `dark orange`, `dark grey`.
 *  To clear, set the color `name` to an empty string.
 * @param datePickerFields, optional, Add or clear a date picker field:

 *  To add, specify the date in `d/mmm/yy` format or ISO format `dd-mm-yyyy`.
 *  To clear, set `formattedDate` to an empty string.
 * @param dateTimePickerFields, optional, Add or clear the planned start date and time:

 *  To add, specify the date and time in ISO format for `formattedDateTime`.
 *  To clear, provide an empty string for `formattedDateTime`.
 * @param issueType, optional, Set the issue type field by providing an `issueTypeId`.
 * @param labelsFields, optional, Edit a labels field:

 *  Options include `ADD`, `REPLACE`, `REMOVE`, or `REMOVE_ALL` for bulk edits.
 *  To clear labels, use the `REMOVE_ALL` option with an empty `labels` array.
 * @param multipleGroupPickerFields, optional, Add or clear a multi-group picker field:

 *  To add groups, provide an array of groups with `groupName`s.
 *  To clear all groups, use an empty `groups` array.
 * @param multipleSelectClearableUserPickerFields, optional, Assign or unassign multiple users to/from a field:

 *  To assign, provide an array of user `accountId`s.
 *  To clear, set `users` to `null`.
 * @param multipleSelectFields, optional, Add or clear a multi-select field:

 *  To add, provide an array of options with `optionId`s.
 *  To clear, use an empty `options` array.
 * @param multipleVersionPickerFields, optional, Edit a multi-version picker field like Fix Versions/Affects Versions:

 *  Options include `ADD`, `REPLACE`, `REMOVE`, or `REMOVE_ALL` for bulk edits.
 *  To clear the field, use the `REMOVE_ALL` option with an empty `versions` array.
 * @param multiselectComponents, optional, Edit a multi select components field:

 *  Options include `ADD`, `REPLACE`, `REMOVE`, or `REMOVE_ALL` for bulk edits.
 *  To clear, use the `REMOVE_ALL` option with an empty `components` array.
 * @param originalEstimateField, optional, Edit the original estimate field.
 * @param priority, optional, Set the priority of an issue by specifying a `priorityId`.
 * @param richTextFields, optional, Add or clear a rich text field:

 *  To add, provide `adfValue`. Note that rich text fields only support ADF values.
 *  To clear, use an empty `richText` object.

For ADF format details, refer to: [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure).
 * @param singleGroupPickerFields, optional, Add or clear a single group picker field:

 *  To add, specify the group with `groupName`.
 *  To clear, set `groupName` to an empty string.
 * @param singleLineTextFields, optional, Add or clear a single line text field:

 *  To add, provide the `text` value.
 *  To clear, set `text` to an empty string.
 * @param singleSelectClearableUserPickerFields, optional, Edit assignment for single select user picker fields like Assignee/Reporter:

 *  To assign an issue, specify the user's `accountId`.
 *  To unassign an issue, set `user` to `null`.
 *  For automatic assignment, set `accountId` to `-1`.
 * @param singleSelectFields, optional, Add or clear a single select field:

 *  To add, specify the option with an `optionId`.
 *  To clear, pass an option with `optionId` as `-1`.
 * @param singleVersionPickerFields, optional, Add or clear a single version picker field:

 *  To add, specify the version with a `versionId`.
 *  To clear, set `versionId` to `-1`.
 * @param timeTrackingField, optional, Edit the time tracking field.
 * @param urlFields, optional, Add or clear a URL field:

 *  To add, provide the `url` with the desired URL value.
 *  To clear, set `url` to an empty string.
 */
@Serializable
data class JiraIssueFields(
    @SerialName("cascadingSelectFields") val cascadingSelectFields: List<JiraCascadingSelectField>? = null,
    @SerialName("clearableNumberFields") val clearableNumberFields: List<JiraNumberField>? = null,
    @SerialName("colorFields") val colorFields: List<JiraColorField>? = null,
    @SerialName("datePickerFields") val datePickerFields: List<JiraDateField>? = null,
    @SerialName("dateTimePickerFields") val dateTimePickerFields: List<JiraDateTimeField>? = null,
    @SerialName("issueType") val issueType: JiraIssueTypeField? = null,
    @SerialName("labelsFields") val labelsFields: List<JiraLabelsField>? = null,
    @SerialName("multipleGroupPickerFields") val multipleGroupPickerFields: List<JiraMultipleGroupPickerField>? = null,
    @SerialName("multipleSelectClearableUserPickerFields") val multipleSelectClearableUserPickerFields: List<JiraMultipleSelectUserPickerField>? = null,
    @SerialName("multipleSelectFields") val multipleSelectFields: List<JiraMultipleSelectField>? = null,
    @SerialName("multipleVersionPickerFields") val multipleVersionPickerFields: List<JiraMultipleVersionPickerField>? = null,
    @SerialName("multiselectComponents") val multiselectComponents: JiraMultiSelectComponentField? = null,
    @SerialName("originalEstimateField") val originalEstimateField: JiraDurationField? = null,
    @SerialName("priority") val priority: JiraPriorityField? = null,
    @SerialName("richTextFields") val richTextFields: List<JiraRichTextField>? = null,
    @SerialName("singleGroupPickerFields") val singleGroupPickerFields: List<JiraSingleGroupPickerField>? = null,
    @SerialName("singleLineTextFields") val singleLineTextFields: List<JiraSingleLineTextField>? = null,
    @SerialName("singleSelectClearableUserPickerFields") val singleSelectClearableUserPickerFields: List<JiraSingleSelectUserPickerField>? = null,
    @SerialName("singleSelectFields") val singleSelectFields: List<JiraSingleSelectField>? = null,
    @SerialName("singleVersionPickerFields") val singleVersionPickerFields: List<JiraSingleVersionPickerField>? = null,
    @SerialName("timeTrackingField") val timeTrackingField: JiraTimeTrackingField? = null,
    @SerialName("urlFields") val urlFields: List<JiraUrlField>? = null
)