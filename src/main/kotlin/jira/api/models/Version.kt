/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * Details about a project version.
 *
 * @param approvers, optional, If the expand option `approvers` is used, returns a list containing the approvers for this version.
 * @param archived, optional, Indicates that the version is archived. Optional when creating or updating a version.
 * @param description, optional, The description of the version. Optional when creating or updating a version. The maximum size is 16,384 bytes.
 * @param driver, optional, If the expand option `driver` is used, returns the Atlassian account ID of the driver.
 * @param expand, optional, Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:

 *  `operations` Returns the list of operations available for this version.
 *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
 *  `driver` Returns the Atlassian account ID of the version driver.
 *  `approvers` Returns a list containing approvers for this version.

Optional for create and update.
 * @param id, optional, The ID of the version.
 * @param issuesStatusForFixVersion, optional, If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
 * @param moveUnfixedIssuesTo, optional, The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
 * @param name, optional, The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
 * @param operations, optional, If the expand option `operations` is used, returns the list of operations available for this version.
 * @param overdue, optional, Indicates that the version is overdue.
 * @param project, optional, Deprecated. Use `projectId`.
 * @param projectId, optional, The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
 * @param releaseDate, optional, The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
 * @param released, optional, Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
 * @param self, optional, The URL of the version.
 * @param startDate, optional, The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
 * @param userReleaseDate, optional, The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
 * @param userStartDate, optional, The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
 */
@Serializable
data class Version(
    @SerialName("approvers") val approvers: List<VersionApprover>? = null,
    @SerialName("archived") val archived: Boolean? = null,
    @SerialName("description") val description: String? = null,
    @SerialName("driver") val driver: String? = null,
    @SerialName("expand") val expand: String? = null,
    @SerialName("id") val id: String? = null,
    @SerialName("issuesStatusForFixVersion") val issuesStatusForFixVersion: VersionIssuesStatus? = null,
    @SerialName("moveUnfixedIssuesTo") val moveUnfixedIssuesTo: String? = null,
    @SerialName("name") val name: String? = null,
    @SerialName("operations") val operations: List<SimpleLink>? = null,
    @SerialName("overdue") val overdue: Boolean? = null,
    @SerialName("project") val project: String? = null,
    @SerialName("projectId") val projectId: Long? = null,
    @SerialName("releaseDate") val releaseDate: String? = null,
    @SerialName("released") val released: Boolean? = null,
    @SerialName("self") val self: String? = null,
    @SerialName("startDate") val startDate: String? = null,
    @SerialName("userReleaseDate") val userReleaseDate: String? = null,
    @SerialName("userStartDate") val userStartDate: String? = null
)