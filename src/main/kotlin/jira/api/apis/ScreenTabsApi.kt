/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.ScreenableTab
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface ScreenTabsApi {

    /**
     * POST /rest/api/3/screens/{screenId}/tabs
     *
     * Creates a tab for a screen.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param screenId The ID of the screen.  (example: null)
     * @param screenableTab, request body
     *
     * @return ScreenableTab
     */
    @POST("/rest/api/3/screens/{screenId}/tabs")
    suspend fun addScreenTab(
        @Body screenId: Long,
        @Body screenableTab: ScreenableTab
    ): ScreenableTab

    /**
     * GET /rest/api/3/screens/{screenId}/tabs
     *
     * Returns the list of tabs for a screen.

     **[Permissions](#permissions) required:**

     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
     * @param screenId The ID of the screen.  (example: null)
     * @param projectKey The key of the project. (optional) (example: null)
     *
     * @return List<ScreenableTab>
     */
    @GET("/rest/api/3/screens/{screenId}/tabs")
    suspend fun getAllScreenTabs(
        @Body screenId: Long,
        @Query("projectKey") projectKey: String? = null
    ): List<ScreenableTab>

    /**
     * GET /rest/api/3/screens/tabs
     *
     * Returns the list of tabs for a bulk of screens.

     **[Permissions](#permissions) required:**

     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param screenId The list of screen IDs. To include multiple screen IDs, provide an ampersand-separated list. For example, `screenId=10000&screenId=10001`. (optional) (example: null)
     * @param tabId The list of tab IDs. To include multiple tab IDs, provide an ampersand-separated list. For example, `tabId=10000&tabId=10001`. (optional) (example: null)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResult The maximum number of items to return per page. The maximum number is 100, (optional) (example: null)
     *
     * @return Unit
     */
    @GET("/rest/api/3/screens/tabs")
    suspend fun getBulkScreenTabs(
        @Query("screenId") screenId: List<Long>? = null,
        @Query("tabId") tabId: List<Long>? = null,
        @Query("startAt") startAt: Long = 0,
        @Query("maxResult") maxResult: Int = 100
    ): Unit

    /**
     * POST /rest/api/3/screens/{screenId}/tabs/{tabId}/move/{pos}
     *
     * Moves a screen tab.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param screenId The ID of the screen.  (example: null)
     * @param tabId The ID of the screen tab.  (example: null)
     * @param pos The position of tab. The base index is 0.  (example: null)
     *
     * @return Unit
     */
    @POST("/rest/api/3/screens/{screenId}/tabs/{tabId}/move/{pos}")
    suspend fun moveScreenTab(
        @Body screenId: Long,
        @Body tabId: Long,
        @Body pos: Int
    ): Unit
}