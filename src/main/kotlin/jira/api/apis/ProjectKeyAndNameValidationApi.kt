/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.ErrorCollection
import retrofit2.http.GET
import retrofit2.http.Query

interface ProjectKeyAndNameValidationApi {

    /**
     * GET /rest/api/3/projectvalidate/validProjectKey
     *
     * Validates a project key and, if the key is invalid or in use, generates a valid random string for the project key.

     **[Permissions](#permissions) required:** None.
     * @param key The project key. (optional) (example: HSP)
     *
     * @return String
     */
    @GET("/rest/api/3/projectvalidate/validProjectKey")
    suspend fun getValidProjectKey(
        @Query("key") key: String? = null
    ): String

    /**
     * GET /rest/api/3/projectvalidate/validProjectName
     *
     * Checks that a project name isn't in use. If the name isn't in use, the passed string is returned. If the name is in use, this operation attempts to generate a valid project name based on the one supplied, usually by adding a sequence number. If a valid project name cannot be generated, a 404 response is returned.

     **[Permissions](#permissions) required:** None.
     * @param name The project name.  (example: null)
     *
     * @return String
     */
    @GET("/rest/api/3/projectvalidate/validProjectName")
    suspend fun getValidProjectName(
        @Query("name") name: String
    ): String

    /**
     * GET /rest/api/3/projectvalidate/key
     *
     * Validates a project key by confirming the key is a valid string and not in use.

     **[Permissions](#permissions) required:** None.
     * @param key The project key. (optional) (example: HSP)
     *
     * @return ErrorCollection
     */
    @GET("/rest/api/3/projectvalidate/key")
    suspend fun validateProjectKey(
        @Query("key") key: String? = null
    ): ErrorCollection
}