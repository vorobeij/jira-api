/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.EntityProperty
import jira.api.models.PropertyKeys
import retrofit2.http.Body
import retrofit2.http.GET

interface IssueCommentPropertiesApi {

    /**
     * GET /rest/api/3/comment/{commentId}/properties/{propertyKey}
     *
     * Returns the value of a comment property.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     * @param commentId The ID of the comment.  (example: null)
     * @param propertyKey The key of the property.  (example: null)
     *
     * @return EntityProperty
     */
    @GET("/rest/api/3/comment/{commentId}/properties/{propertyKey}")
    suspend fun getCommentProperty(
        @Body commentId: String,
        @Body propertyKey: String
    ): EntityProperty

    /**
     * GET /rest/api/3/comment/{commentId}/properties
     *
     * Returns the keys of all the properties of a comment.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     * @param commentId The ID of the comment.  (example: null)
     *
     * @return PropertyKeys
     */
    @GET("/rest/api/3/comment/{commentId}/properties")
    suspend fun getCommentPropertyKeys(
        @Body commentId: String
    ): PropertyKeys
}