/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.AddAtlassianTeamRequest
import jira.api.models.CreatePlanOnlyTeamRequest
import jira.api.models.GetAtlassianTeamResponse
import jira.api.models.GetPlanOnlyTeamResponse
import jira.api.models.PageWithCursorGetTeamResponseForPage
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface TeamsInPlanApi {

    /**
     * POST /rest/api/3/plans/plan/{planId}/team/atlassian
     *
     * Adds an existing Atlassian team to a plan and configures their plannning settings.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     * @param addAtlassianTeamRequest, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/plans/plan/{planId}/team/atlassian")
    suspend fun addAtlassianTeam(
        @Body planId: Long,
        @Body addAtlassianTeamRequest: AddAtlassianTeamRequest
    ): Unit

    /**
     * POST /rest/api/3/plans/plan/{planId}/team/planonly
     *
     * Creates a plan-only team and configures their planning settings.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     * @param createPlanOnlyTeamRequest, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/plans/plan/{planId}/team/planonly")
    suspend fun createPlanOnlyTeam(
        @Body planId: Long,
        @Body createPlanOnlyTeamRequest: CreatePlanOnlyTeamRequest
    ): Unit

    /**
     * GET /rest/api/3/plans/plan/{planId}/team/atlassian/{atlassianTeamId}
     *
     * Returns planning settings for an Atlassian team in a plan.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     * @param atlassianTeamId The ID of the Atlassian team.  (example: null)
     *
     * @return GetAtlassianTeamResponse
     */
    @GET("/rest/api/3/plans/plan/{planId}/team/atlassian/{atlassianTeamId}")
    suspend fun getAtlassianTeam(
        @Body planId: Long,
        @Body atlassianTeamId: String
    ): GetAtlassianTeamResponse

    /**
     * GET /rest/api/3/plans/plan/{planId}/team/planonly/{planOnlyTeamId}
     *
     * Returns planning settings for a plan-only team.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     * @param planOnlyTeamId The ID of the plan-only team.  (example: null)
     *
     * @return GetPlanOnlyTeamResponse
     */
    @GET("/rest/api/3/plans/plan/{planId}/team/planonly/{planOnlyTeamId}")
    suspend fun getPlanOnlyTeam(
        @Body planId: Long,
        @Body planOnlyTeamId: Long
    ): GetPlanOnlyTeamResponse

    /**
     * GET /rest/api/3/plans/plan/{planId}/team
     *
     * Returns a [paginated](#pagination) list of plan-only and Atlassian teams in a plan.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     * @param cursor The cursor to start from. If not provided, the first page will be returned. (optional) (example: null)
     * @param maxResults The maximum number of plan teams to return per page. The maximum value is 50. The default value is 50. (optional) (example: null)
     *
     * @return PageWithCursorGetTeamResponseForPage
     */
    @GET("/rest/api/3/plans/plan/{planId}/team")
    suspend fun getTeams(
        @Body planId: Long,
        @Query("cursor") cursor: String = "",
        @Query("maxResults") maxResults: Int = 50
    ): PageWithCursorGetTeamResponseForPage
}