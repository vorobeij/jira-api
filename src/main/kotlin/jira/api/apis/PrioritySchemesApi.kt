/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.*
import retrofit2.http.*

interface PrioritySchemesApi {

    /**
     * POST /rest/api/3/priorityscheme
     *
     * Creates a new priority scheme.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createPrioritySchemeDetails, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/priorityscheme")
    suspend fun createPriorityScheme(
        @Body createPrioritySchemeDetails: CreatePrioritySchemeDetails
    ): Unit

    /**
     * GET /rest/api/3/priorityscheme/priorities/available
     *
     * Returns a [paginated](#pagination) list of priorities available for adding to a priority scheme.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param query The string to query priorities on by name. (optional) (example: null)
     * @param schemeId The priority scheme ID.  (example: null)
     * @param exclude A list of priority IDs to exclude from the results. (optional) (example: null)
     *
     * @return PageBeanPriorityWithSequence
     */
    @GET("/rest/api/3/priorityscheme/priorities/available")
    suspend fun getAvailablePrioritiesByPriorityScheme(
        @Query("startAt") startAt: String = 0,
        @Query("maxResults") maxResults: String = 50,
        @Query("query") query: String =,
        @Query("schemeId") schemeId: String,
        @Query("exclude") exclude: List<String>? = null
    ): PageBeanPriorityWithSequence

    /**
     * GET /rest/api/3/priorityscheme/{schemeId}/priorities
     *
     * Returns a [paginated](#pagination) list of priorities by scheme.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param schemeId The priority scheme ID.  (example: null)
     *
     * @return PageBeanPriorityWithSequence
     */
    @GET("/rest/api/3/priorityscheme/{schemeId}/priorities")
    suspend fun getPrioritiesByPriorityScheme(
        @Query("startAt") startAt: String = 0,
        @Query("maxResults") maxResults: String = 50,
        @Body schemeId: String
    ): PageBeanPriorityWithSequence

    /**
     * GET /rest/api/3/priorityscheme
     *
     * Returns a [paginated](#pagination) list of priority schemes.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param priorityId A set of priority IDs to filter by. To include multiple IDs, provide an ampersand-separated list. For example, `priorityId=10000&priorityId=10001`. (optional) (example: null)
     * @param schemeId A set of priority scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `schemeId=10000&schemeId=10001`. (optional) (example: null)
     * @param schemeName The name of scheme to search for. (optional) (example: null)
     * @param onlyDefault Whether only the default priority is returned. (optional) (example: null)
     * @param orderBy The ordering to return the priority schemes by. (optional) (example: null)
     * @param expand A comma separated list of additional information to return. "priorities" will return priorities associated with the priority scheme. "projects" will return projects associated with the priority scheme. `expand=priorities,projects`. (optional) (example: null)
     *
     * @return PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects
     */
    @GET("/rest/api/3/priorityscheme")
    suspend fun getPrioritySchemes(
        @Query("startAt") startAt: String = 0,
        @Query("maxResults") maxResults: String = 50,
        @Query("priorityId") priorityId: List<Long>? = null,
        @Query("schemeId") schemeId: List<Long>? = null,
        @Query("schemeName") schemeName: String =,
        @Query("onlyDefault") onlyDefault: Boolean = false,
        @Query("orderBy") orderBy: String = +name,
        @Query("expand") expand: String? = null
    ): PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects

    /**
     * GET /rest/api/3/priorityscheme/{schemeId}/projects
     *
     * Returns a [paginated](#pagination) list of projects by scheme.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param projectId The project IDs to filter by. For example, `projectId=10000&projectId=10001`. (optional) (example: null)
     * @param schemeId The priority scheme ID.  (example: null)
     * @param query The string to query projects on by name. (optional) (example: null)
     *
     * @return PageBeanProject
     */
    @GET("/rest/api/3/priorityscheme/{schemeId}/projects")
    suspend fun getProjectsByPriorityScheme(
        @Query("startAt") startAt: String = 0,
        @Query("maxResults") maxResults: String = 50,
        @Query("projectId") projectId: List<Long>? = null,
        @Body schemeId: String,
        @Query("query") query: String =
    ): PageBeanProject

    /**
     * POST /rest/api/3/priorityscheme/mappings
     *
     * Returns a [paginated](#pagination) list of priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param suggestedMappingsRequestBean, request body
     *
     * @return PageBeanPriorityWithSequence
     */
    @POST("/rest/api/3/priorityscheme/mappings")
    suspend fun suggestedPrioritiesForMappings(
        @Body suggestedMappingsRequestBean: SuggestedMappingsRequestBean
    ): PageBeanPriorityWithSequence
}