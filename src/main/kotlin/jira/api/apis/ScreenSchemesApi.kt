/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.*
import retrofit2.http.*

interface ScreenSchemesApi {

    /**
     * POST /rest/api/3/screenscheme
     *
     * Creates a screen scheme.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param screenSchemeDetails, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/screenscheme")
    suspend fun createScreenScheme(
        @Body screenSchemeDetails: ScreenSchemeDetails
    ): Unit

    /**
     * GET /rest/api/3/screenscheme
     *
     * Returns a [paginated](#pagination) list of screen schemes.

    Only screen schemes used in classic projects are returned.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param id The list of screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`. (optional) (example: null)
     * @param expand Use [expand](#expansion) include additional information in the response. This parameter accepts `issueTypeScreenSchemes` that, for each screen schemes, returns information about the issue type screen scheme the screen scheme is assigned to. (optional) (example: null)
     * @param queryString String used to perform a case-insensitive partial match with screen scheme name. (optional) (example: null)
     * @param orderBy [Order](#ordering) the results by a field:

     *  `id` Sorts by screen scheme ID.
     *  `name` Sorts by screen scheme name. (optional) (example: null)
     *
     * @return PageBeanScreenScheme
     */
    @GET("/rest/api/3/screenscheme")
    suspend fun getScreenSchemes(
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 25,
        @Query("id") id: List<Long>? = null,
        @Query("expand") expand: String =,
        @Query("queryString") queryString: String =,
        @Query("orderBy") orderBy: String? = null
    ): PageBeanScreenScheme
}