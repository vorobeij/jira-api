/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.IssueLink
import jira.api.models.LinkIssueRequestJsonBean
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST

interface IssueLinksApi {

    /**
     * GET /rest/api/3/issueLink/{linkId}
     *
     * Returns an issue link.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:**

     *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the linked issues.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues.
     * @param linkId The ID of the issue link.  (example: null)
     *
     * @return IssueLink
     */
    @GET("/rest/api/3/issueLink/{linkId}")
    suspend fun getIssueLink(
        @Body linkId: String
    ): IssueLink

    /**
     * POST /rest/api/3/issueLink
     *
     * Creates a link between two issues. Use this operation to indicate a relationship between two issues and optionally add a comment to the from (outward) issue. To use this resource the site must have [Issue Linking](https://confluence.atlassian.com/x/yoXKM) enabled.

    This resource returns nothing on the creation of an issue link. To obtain the ID of the issue link, use `https://your-domain.atlassian.net/rest/api/3/issue/[linked issue key]?fields=issuelinks`.

    If the link request duplicates a link, the response indicates that the issue link was created. If the request included a comment, the comment is added.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:**

     *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues to be linked,
     *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) on the project containing the from (outward) issue,
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     * @param linkIssueRequestJsonBean, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/issueLink")
    suspend fun linkIssues(
        @Body linkIssueRequestJsonBean: LinkIssueRequestJsonBean
    ): Unit
}