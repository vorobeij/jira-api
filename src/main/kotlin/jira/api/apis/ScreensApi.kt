/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.*
import retrofit2.http.*

interface ScreensApi {

    /**
     * POST /rest/api/3/screens/addToDefault/{fieldId}
     *
     * Adds a field to the default tab of the default screen.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param fieldId The ID of the field.  (example: null)
     *
     * @return Unit
     */
    @POST("/rest/api/3/screens/addToDefault/{fieldId}")
    suspend fun addFieldToDefaultScreen(
        @Body fieldId: String
    ): Unit

    /**
     * POST /rest/api/3/screens
     *
     * Creates a screen with a default field tab.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param screenDetails, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/screens")
    suspend fun createScreen(
        @Body screenDetails: ScreenDetails
    ): Unit

    /**
     * GET /rest/api/3/screens/{screenId}/availableFields
     *
     * Returns the fields that can be added to a tab on a screen.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param screenId The ID of the screen.  (example: null)
     *
     * @return List<ScreenableField>
     */
    @GET("/rest/api/3/screens/{screenId}/availableFields")
    suspend fun getAvailableScreenFields(
        @Body screenId: Long
    ): List<ScreenableField>

    /**
     * GET /rest/api/3/screens
     *
     * Returns a [paginated](#pagination) list of all screens or those specified by one or more screen IDs.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param id The list of screen IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`. (optional) (example: null)
     * @param queryString String used to perform a case-insensitive partial match with screen name. (optional) (example: null)
     * @param scope The scope filter string. To filter by multiple scope, provide an ampersand-separated list. For example, `scope=GLOBAL&scope=PROJECT`. (optional) (example: null)
     * @param orderBy [Order](#ordering) the results by a field:

     *  `id` Sorts by screen ID.
     *  `name` Sorts by screen name. (optional) (example: null)
     *
     * @return PageBeanScreen
     */
    @GET("/rest/api/3/screens")
    suspend fun getScreens(
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 100,
        @Query("id") id: List<Long>? = null,
        @Query("queryString") queryString: String =,
        @Query("scope") scope: List<String>? = null,
        @Query("orderBy") orderBy: String? = null
    ): PageBeanScreen

    /**
     * GET /rest/api/3/field/{fieldId}/screens
     *
     * Returns a [paginated](#pagination) list of the screens a field is used in.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param fieldId The ID of the field to return screens for.  (example: null)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param expand Use [expand](#expansion) to include additional information about screens in the response. This parameter accepts `tab` which returns details about the screen tabs the field is used in. (optional) (example: null)
     *
     * @return PageBeanScreenWithTab
     */
    @GET("/rest/api/3/field/{fieldId}/screens")
    suspend fun getScreensForField(
        @Body fieldId: String,
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 100,
        @Query("expand") expand: String? = null
    ): PageBeanScreenWithTab
}