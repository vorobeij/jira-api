/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.Votes
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST

interface IssueVotesApi {

    /**
     * POST /rest/api/3/issue/{issueIdOrKey}/votes
     *
     * Adds the user's vote to an issue. This is the equivalent of the user clicking *Vote* on an issue in Jira.

    This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

     **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     * @param issueIdOrKey The ID or key of the issue.  (example: null)
     *
     * @return Unit
     */
    @POST("/rest/api/3/issue/{issueIdOrKey}/votes")
    suspend fun addVote(
        @Body issueIdOrKey: String
    ): Unit

    /**
     * GET /rest/api/3/issue/{issueIdOrKey}/votes
     *
     * Returns details about the votes on an issue.

    This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.

    Note that users with the necessary permissions for this operation but without the *View voters and watchers* project permissions are not returned details in the `voters` field.
     * @param issueIdOrKey The ID or key of the issue.  (example: null)
     *
     * @return Votes
     */
    @GET("/rest/api/3/issue/{issueIdOrKey}/votes")
    suspend fun getVotes(
        @Body issueIdOrKey: String
    ): Votes
}