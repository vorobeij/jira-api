/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.DefaultShareScope
import jira.api.models.SharePermission
import jira.api.models.SharePermissionInputBean
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST

interface FilterSharingApi {

    /**
     * POST /rest/api/3/filter/{id}/permission
     *
     * Add a share permissions to a filter. If you add a global share permission (one for all logged-in users or the public) it will overwrite all share permissions for the filter.

    Be aware that this operation uses different objects for updating share permissions compared to [Update filter](#api-rest-api-3-filter-id-put).

     **[Permissions](#permissions) required:** *Share dashboards and filters* [global permission](https://confluence.atlassian.com/x/x4dKLg) and the user must own the filter.
     * @param id The ID of the filter.  (example: null)
     * @param sharePermissionInputBean, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/filter/{id}/permission")
    suspend fun addSharePermission(
        @Body id: Long,
        @Body sharePermissionInputBean: SharePermissionInputBean
    ): Unit

    /**
     * GET /rest/api/3/filter/defaultShareScope
     *
     * Returns the default sharing settings for new filters and dashboards for a user.

     **[Permissions](#permissions) required:** Permission to access Jira.
     *
     * @return DefaultShareScope
     */
    @GET("/rest/api/3/filter/defaultShareScope")
    suspend fun getDefaultShareScope(): DefaultShareScope

    /**
     * GET /rest/api/3/filter/{id}/permission/{permissionId}
     *
     * Returns a share permission for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** None, however, a share permission is only returned for:

     *  filters owned by the user.
     *  filters shared with a group that the user is a member of.
     *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
     *  filters shared with a public project.
     *  filters shared with the public.
     * @param id The ID of the filter.  (example: null)
     * @param permissionId The ID of the share permission.  (example: null)
     *
     * @return SharePermission
     */
    @GET("/rest/api/3/filter/{id}/permission/{permissionId}")
    suspend fun getSharePermission(
        @Body id: Long,
        @Body permissionId: Long
    ): SharePermission

    /**
     * GET /rest/api/3/filter/{id}/permission
     *
     * Returns the share permissions for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** None, however, share permissions are only returned for:

     *  filters owned by the user.
     *  filters shared with a group that the user is a member of.
     *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
     *  filters shared with a public project.
     *  filters shared with the public.
     * @param id The ID of the filter.  (example: null)
     *
     * @return List<SharePermission>
     */
    @GET("/rest/api/3/filter/{id}/permission")
    suspend fun getSharePermissions(
        @Body id: Long
    ): List<SharePermission>
}