/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.CreateNotificationSchemeDetails
import jira.api.models.NotificationScheme
import jira.api.models.PageBeanNotificationScheme
import jira.api.models.PageBeanNotificationSchemeAndProjectMappingJsonBean
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface IssueNotificationSchemesApi {

    /**
     * POST /rest/api/3/notificationscheme
     *
     * Creates a notification scheme with notifications. You can create up to 1000 notifications per request.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createNotificationSchemeDetails, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/notificationscheme")
    suspend fun createNotificationScheme(
        @Body createNotificationSchemeDetails: CreateNotificationSchemeDetails
    ): Unit

    /**
     * GET /rest/api/3/notificationscheme/{id}
     *
     * Returns a [notification scheme](https://confluence.atlassian.com/x/8YdKLg), including the list of events and the recipients who will receive notifications for those events.

     **[Permissions](#permissions) required:** Permission to access Jira, however, the user must have permission to administer at least one project associated with the notification scheme.
     * @param id The ID of the notification scheme. Use [Get notification schemes paginated](#api-rest-api-3-notificationscheme-get) to get a list of notification scheme IDs.  (example: null)
     * @param expand Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

     *  `all` Returns all expandable information
     *  `field` Returns information about any custom fields assigned to receive an event
     *  `group` Returns information about any groups assigned to receive an event
     *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information
     *  `projectRole` Returns information about any project roles assigned to receive an event
     *  `user` Returns information about any users assigned to receive an event (optional) (example: null)
     *
     * @return NotificationScheme
     */
    @GET("/rest/api/3/notificationscheme/{id}")
    suspend fun getNotificationScheme(
        @Body id: Long,
        @Query("expand") expand: String? = null
    ): NotificationScheme

    /**
     * GET /rest/api/3/notificationscheme/project
     *
     * Returns a [paginated](#pagination) mapping of project that have notification scheme assigned. You can provide either one or multiple notification scheme IDs or project IDs to filter by. If you don't provide any, this will return a list of all mappings. Note that only company-managed (classic) projects are supported. This is because team-managed projects don't have a concept of a default notification scheme. The mappings are ordered by projectId.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param notificationSchemeId The list of notifications scheme IDs to be filtered out (optional) (example: null)
     * @param projectId The list of project IDs to be filtered out (optional) (example: null)
     *
     * @return PageBeanNotificationSchemeAndProjectMappingJsonBean
     */
    @GET("/rest/api/3/notificationscheme/project")
    suspend fun getNotificationSchemeToProjectMappings(
        @Query("startAt") startAt: String = 0,
        @Query("maxResults") maxResults: String = 50,
        @Query("notificationSchemeId") notificationSchemeId: List<String>? = null,
        @Query("projectId") projectId: List<String>? = null
    ): PageBeanNotificationSchemeAndProjectMappingJsonBean

    /**
     * GET /rest/api/3/notificationscheme
     *
     * Returns a [paginated](#pagination) list of [notification schemes](https://confluence.atlassian.com/x/8YdKLg) ordered by the display name.

     *Note that you should allow for events without recipients to appear in responses.*

     **[Permissions](#permissions) required:** Permission to access Jira, however, the user must have permission to administer at least one project associated with a notification scheme for it to be returned.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param id The list of notification schemes IDs to be filtered by (optional) (example: null)
     * @param projectId The list of projects IDs to be filtered by (optional) (example: null)
     * @param onlyDefault When set to true, returns only the default notification scheme. If you provide project IDs not associated with the default, returns an empty page. The default value is false. (optional) (example: null)
     * @param expand Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

     *  `all` Returns all expandable information
     *  `field` Returns information about any custom fields assigned to receive an event
     *  `group` Returns information about any groups assigned to receive an event
     *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information
     *  `projectRole` Returns information about any project roles assigned to receive an event
     *  `user` Returns information about any users assigned to receive an event (optional) (example: null)
     *
     * @return PageBeanNotificationScheme
     */
    @GET("/rest/api/3/notificationscheme")
    suspend fun getNotificationSchemes(
        @Query("startAt") startAt: String = 0,
        @Query("maxResults") maxResults: String = 50,
        @Query("id") id: List<String>? = null,
        @Query("projectId") projectId: List<String>? = null,
        @Query("onlyDefault") onlyDefault: Boolean = false,
        @Query("expand") expand: String? = null
    ): PageBeanNotificationScheme
}