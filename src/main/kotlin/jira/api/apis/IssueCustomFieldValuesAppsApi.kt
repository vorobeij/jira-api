/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.MultipleCustomFieldValuesUpdateDetails
import retrofit2.http.Body
import retrofit2.http.POST
import retrofit2.http.Query

interface IssueCustomFieldValuesAppsApi {

    /**
     * POST /rest/api/3/app/field/value
     *
     * Updates the value of one or more custom fields on one or more issues. Combinations of custom field and issue should be unique within the request.

    Apps can only perform this operation on [custom fields](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/) and [custom field types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/) declared in their own manifests.

     **[Permissions](#permissions) required:** Only the app that owns the custom field or custom field type can update its values with this operation.

    The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
     * @param generateChangelog Whether to generate a changelog for this update. (optional) (example: null)
     * @param multipleCustomFieldValuesUpdateDetails, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/app/field/value")
    suspend fun updateMultipleCustomFieldValues(
        @Query("generateChangelog") generateChangelog: Boolean = true,
        @Body multipleCustomFieldValuesUpdateDetails: MultipleCustomFieldValuesUpdateDetails
    ): Unit
}