/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.JiraStatus
import jira.api.models.PageOfStatuses
import jira.api.models.StatusCreateRequest
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface StatusApi {

    /**
     * POST /rest/api/3/statuses
     *
     * Creates statuses for a global or project scope.

     **[Permissions](#permissions) required:**

     *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
     *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
     * @param statusCreateRequest, request body
     *
     * @return List<JiraStatus>
     */
    @POST("/rest/api/3/statuses")
    suspend fun createStatuses(
        @Body statusCreateRequest: StatusCreateRequest
    ): List<JiraStatus>

    /**
     * GET /rest/api/3/statuses
     *
     * Returns a list of the statuses specified by one or more status IDs.

     **[Permissions](#permissions) required:**

     *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
     *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
     * @param expand Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

     *  `usages` Returns the project and issue types that use the status in their workflow.
     *  `workflowUsages` Returns the workflows that use the status. (optional) (example: null)
     * @param id The list of status IDs. To include multiple IDs, provide an ampersand-separated list. For example, id=10000&id=10001.

    Min items `1`, Max items `50`  (example: null)
     *
     * @return List<JiraStatus>
     */
    @GET("/rest/api/3/statuses")
    suspend fun getStatusesById(
        @Query("expand") expand: String? = null,
        @Query("id") id: List<String>
    ): List<JiraStatus>

    /**
     * GET /rest/api/3/statuses/search
     *
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of statuses that match a search on name or project.

     **[Permissions](#permissions) required:**

     *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
     *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
     * @param expand Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

     *  `usages` Returns the project and issue types that use the status in their workflow.
     *  `workflowUsages` Returns the workflows that use the status. (optional) (example: null)
     * @param projectId The project the status is part of or null for global statuses. (optional) (example: null)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param searchString Term to match status names against or null to search for all statuses in the search scope. (optional) (example: null)
     * @param statusCategory Category of the status to filter by. The supported values are: `TODO`, `IN_PROGRESS`, and `DONE`. (optional) (example: null)
     *
     * @return PageOfStatuses
     */
    @GET("/rest/api/3/statuses/search")
    suspend fun search(
        @Query("expand") expand: String? = null,
        @Query("projectId") projectId: String? = null,
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 200,
        @Query("searchString") searchString: String? = null,
        @Query("statusCategory") statusCategory: String? = null
    ): PageOfStatuses
}