/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.ContainerForRegisteredWebhooks
import jira.api.models.FailedWebhooks
import jira.api.models.PageBeanWebhook
import jira.api.models.WebhookRegistrationDetails
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface WebhooksApi {

    /**
     * GET /rest/api/3/webhook
     *
     * Returns a [paginated](#pagination) list of the webhooks registered by the calling app.

     **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     *
     * @return PageBeanWebhook
     */
    @GET("/rest/api/3/webhook")
    suspend fun getDynamicWebhooksForApp(
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 100
    ): PageBeanWebhook

    /**
     * GET /rest/api/3/webhook/failed
     *
     * Returns webhooks that have recently failed to be delivered to the requesting app after the maximum number of retries.

    After 72 hours the failure may no longer be returned by this operation.

    The oldest failure is returned first.

    This method uses a cursor-based pagination. To request the next page use the failure time of the last webhook on the list as the `failedAfter` value or use the URL provided in `next`.

     **[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) can use this operation.
     * @param maxResults The maximum number of webhooks to return per page. If obeying the maxResults directive would result in records with the same failure time being split across pages, the directive is ignored and all records with the same failure time included on the page. (optional) (example: null)
     * @param after The time after which any webhook failure must have occurred for the record to be returned, expressed as milliseconds since the UNIX epoch. (optional) (example: null)
     *
     * @return FailedWebhooks
     */
    @GET("/rest/api/3/webhook/failed")
    suspend fun getFailedWebhooks(
        @Query("maxResults") maxResults: Int? = null,
        @Query("after") after: Long? = null
    ): FailedWebhooks

    /**
     * POST /rest/api/3/webhook
     *
     * Registers webhooks.

     **NOTE:** for non-public OAuth apps, webhooks are delivered only if there is a match between the app owner and the user who registered a dynamic webhook.

     **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
     * @param webhookRegistrationDetails, request body
     *
     * @return ContainerForRegisteredWebhooks
     */
    @POST("/rest/api/3/webhook")
    suspend fun registerDynamicWebhooks(
        @Body webhookRegistrationDetails: WebhookRegistrationDetails
    ): ContainerForRegisteredWebhooks
}