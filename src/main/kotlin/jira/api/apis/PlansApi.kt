/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.CreatePlanRequest
import jira.api.models.DuplicatePlanRequest
import jira.api.models.GetPlanResponse
import jira.api.models.PageWithCursorGetPlanResponseForPage
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface PlansApi {

    /**
     * POST /rest/api/3/plans/plan
     *
     * Creates a plan.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createPlanRequest, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/plans/plan")
    suspend fun createPlan(
        @Body createPlanRequest: CreatePlanRequest
    ): Unit

    /**
     * POST /rest/api/3/plans/plan/{planId}/duplicate
     *
     * Duplicates a plan.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     * @param duplicatePlanRequest, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/plans/plan/{planId}/duplicate")
    suspend fun duplicatePlan(
        @Body planId: Long,
        @Body duplicatePlanRequest: DuplicatePlanRequest
    ): Unit

    /**
     * GET /rest/api/3/plans/plan/{planId}
     *
     * Returns a plan.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param planId The ID of the plan.  (example: null)
     *
     * @return GetPlanResponse
     */
    @GET("/rest/api/3/plans/plan/{planId}")
    suspend fun getPlan(
        @Body planId: Long
    ): GetPlanResponse

    /**
     * GET /rest/api/3/plans/plan
     *
     * Returns a [paginated](#pagination) list of plans.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param includeTrashed Whether to include trashed plans in the results. (optional) (example: null)
     * @param includeArchived Whether to include archived plans in the results. (optional) (example: null)
     * @param cursor The cursor to start from. If not provided, the first page will be returned. (optional) (example: null)
     * @param maxResults The maximum number of plans to return per page. The maximum value is 50. The default value is 50. (optional) (example: null)
     *
     * @return PageWithCursorGetPlanResponseForPage
     */
    @GET("/rest/api/3/plans/plan")
    suspend fun getPlans(
        @Query("includeTrashed") includeTrashed: Boolean = false,
        @Query("includeArchived") includeArchived: Boolean = false,
        @Query("cursor") cursor: String = "",
        @Query("maxResults") maxResults: Int = 50
    ): PageWithCursorGetPlanResponseForPage
}