/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.*
import retrofit2.http.*

interface ProjectComponentsApi {

    /**
     * POST /rest/api/3/component
     *
     * Creates a component. Use components to provide containers for issues within a project. Use components to provide containers for issues within a project.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the component is created or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param projectComponent, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/component")
    suspend fun createComponent(
        @Body projectComponent: ProjectComponent
    ): Unit

    /**
     * GET /rest/api/3/component
     *
     * Returns a [paginated](#pagination) list of all components in a project, including global (Compass) components when applicable.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     * @param projectIdsOrKeys The project IDs and/or project keys (case sensitive). (optional) (example: null)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param orderBy [Order](#ordering) the results by a field:

     *  `description` Sorts by the component description.
     *  `name` Sorts by component name. (optional) (example: null)
     * @param query Filter the results using a literal string. Components with a matching `name` or `description` are returned (case insensitive). (optional) (example: null)
     *
     * @return PageBean2ComponentJsonBean
     */
    @GET("/rest/api/3/component")
    suspend fun findComponentsForProjects(
        @Query("projectIdsOrKeys") projectIdsOrKeys: List<String>? = null,
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 50,
        @Query("orderBy") orderBy: String? = null,
        @Query("query") query: String? = null
    ): PageBean2ComponentJsonBean

    /**
     * GET /rest/api/3/component/{id}
     *
     * Returns a component.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for project containing the component.
     * @param id The ID of the component.  (example: null)
     *
     * @return ProjectComponent
     */
    @GET("/rest/api/3/component/{id}")
    suspend fun getComponent(
        @Body id: String
    ): ProjectComponent

    /**
     * GET /rest/api/3/component/{id}/relatedIssueCounts
     *
     * Returns the counts of issues assigned to the component.

    This operation can be accessed anonymously.

     **Deprecation notice:** The required OAuth 2.0 scopes will be updated on June 15, 2024.

     *  **Classic**: `read:jira-work`
     *  **Granular**: `read:field:jira`, `read:project.component:jira`

     **[Permissions](#permissions) required:** None.
     * @param id The ID of the component.  (example: null)
     *
     * @return ComponentIssuesCount
     */
    @GET("/rest/api/3/component/{id}/relatedIssueCounts")
    suspend fun getComponentRelatedIssues(
        @Body id: String
    ): ComponentIssuesCount

    /**
     * GET /rest/api/3/project/{projectIdOrKey}/components
     *
     * Returns all components in a project. See the [Get project components paginated](#api-rest-api-3-project-projectIdOrKey-component-get) resource if you want to get a full list of components with pagination.

    If your project uses Compass components, this API will return a paginated list of Compass components that are linked to issues in that project.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     * @param projectIdOrKey The project ID or project key (case sensitive).  (example: null)
     * @param componentSource The source of the components to return. Can be `jira` (default), `compass` or `auto`. When `auto` is specified, the API will return connected Compass components if the project is opted into Compass, otherwise it will return Jira components. Defaults to `jira`. (optional) (example: null)
     *
     * @return List<ProjectComponent>
     */
    @GET("/rest/api/3/project/{projectIdOrKey}/components")
    suspend fun getProjectComponents(
        @Body projectIdOrKey: String,
        @Query("componentSource") componentSource: String = "jira"
    ): List<ProjectComponent>

    /**
     * GET /rest/api/3/project/{projectIdOrKey}/component
     *
     * Returns a [paginated](#pagination) list of all components in a project. See the [Get project components](#api-rest-api-3-project-projectIdOrKey-components-get) resource if you want to get a full list of versions without pagination.

    If your project uses Compass components, this API will return a list of Compass components that are linked to issues in that project.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     * @param projectIdOrKey The project ID or project key (case sensitive).  (example: null)
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param orderBy [Order](#ordering) the results by a field:

     *  `description` Sorts by the component description.
     *  `issueCount` Sorts by the count of issues associated with the component.
     *  `lead` Sorts by the user key of the component's project lead.
     *  `name` Sorts by component name. (optional) (example: null)
     * @param componentSource The source of the components to return. Can be `jira` (default), `compass` or `auto`. When `auto` is specified, the API will return connected Compass components if the project is opted into Compass, otherwise it will return Jira components. Defaults to `jira`. (optional) (example: null)
     * @param query Filter the results using a literal string. Components with a matching `name` or `description` are returned (case insensitive). (optional) (example: null)
     *
     * @return PageBeanComponentWithIssueCount
     */
    @GET("/rest/api/3/project/{projectIdOrKey}/component")
    suspend fun getProjectComponentsPaginated(
        @Body projectIdOrKey: String,
        @Query("startAt") startAt: Long = 0,
        @Query("maxResults") maxResults: Int = 50,
        @Query("orderBy") orderBy: String? = null,
        @Query("componentSource") componentSource: String = "jira",
        @Query("query") query: String? = null
    ): PageBeanComponentWithIssueCount
}