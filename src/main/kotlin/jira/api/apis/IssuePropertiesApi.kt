/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.EntityProperty
import jira.api.models.IssueEntityProperties
import jira.api.models.MultiIssueEntityProperties
import jira.api.models.PropertyKeys
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST

interface IssuePropertiesApi {

    /**
     * POST /rest/api/3/issue/properties/multi
     *
     * Sets or updates entity property values on issues. Up to 10 entity properties can be specified for each issue and up to 100 issues included in the request.

    The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON.

    This operation is:

     *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
     *  non-transactional. Updating some entities may fail. Such information will available in the task result.

     **[Permissions](#permissions) required:**

     *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     * @param multiIssueEntityProperties, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/issue/properties/multi")
    suspend fun bulkSetIssuePropertiesByIssue(
        @Body multiIssueEntityProperties: MultiIssueEntityProperties
    ): Unit

    /**
     * POST /rest/api/3/issue/properties
     *
     * Sets or updates a list of entity property values on issues. A list of up to 10 entity properties can be specified along with up to 10,000 issues on which to set or update that list of entity properties.

    The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON. The maximum length of single issue property value is 32768 characters. This operation can be accessed anonymously.

    This operation is:

     *  transactional, either all properties are updated in all eligible issues or, when errors occur, no properties are updated.
     *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

     **[Permissions](#permissions) required:**

     *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     * @param issueEntityProperties, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/issue/properties")
    suspend fun bulkSetIssuesPropertiesList(
        @Body issueEntityProperties: IssueEntityProperties
    ): Unit

    /**
     * GET /rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}
     *
     * Returns the key and value of an issue's property.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     * @param issueIdOrKey The key or ID of the issue.  (example: null)
     * @param propertyKey The key of the property.  (example: null)
     *
     * @return EntityProperty
     */
    @GET("/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}")
    suspend fun getIssueProperty(
        @Body issueIdOrKey: String,
        @Body propertyKey: String
    ): EntityProperty

    /**
     * GET /rest/api/3/issue/{issueIdOrKey}/properties
     *
     * Returns the URLs and keys of an issue's properties.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** Property details are only returned where the user has:

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     * @param issueIdOrKey The key or ID of the issue.  (example: null)
     *
     * @return PropertyKeys
     */
    @GET("/rest/api/3/issue/{issueIdOrKey}/properties")
    suspend fun getIssuePropertyKeys(
        @Body issueIdOrKey: String
    ): PropertyKeys
}