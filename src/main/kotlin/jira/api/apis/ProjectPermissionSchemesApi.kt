/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.PermissionScheme
import jira.api.models.ProjectIssueSecurityLevels
import jira.api.models.SecurityScheme
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.Query

interface ProjectPermissionSchemesApi {

    /**
     * GET /rest/api/3/project/{projectKeyOrId}/permissionscheme
     *
     * Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg) associated with the project.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
     * @param projectKeyOrId The project ID or project key (case sensitive).  (example: null)
     * @param expand Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:

     *  `all` Returns all expandable information.
     *  `field` Returns information about the custom field granted the permission.
     *  `group` Returns information about the group that is granted the permission.
     *  `permissions` Returns all permission grants for each permission scheme.
     *  `projectRole` Returns information about the project role granted the permission.
     *  `user` Returns information about the user who is granted the permission. (optional) (example: null)
     *
     * @return PermissionScheme
     */
    @GET("/rest/api/3/project/{projectKeyOrId}/permissionscheme")
    suspend fun getAssignedPermissionScheme(
        @Body projectKeyOrId: String,
        @Query("expand") expand: String? = null
    ): PermissionScheme

    /**
     * GET /rest/api/3/project/{projectKeyOrId}/issuesecuritylevelscheme
     *
     * Returns the [issue security scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the project.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or the *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
     * @param projectKeyOrId The project ID or project key (case sensitive).  (example: null)
     *
     * @return SecurityScheme
     */
    @GET("/rest/api/3/project/{projectKeyOrId}/issuesecuritylevelscheme")
    suspend fun getProjectIssueSecurityScheme(
        @Body projectKeyOrId: String
    ): SecurityScheme

    /**
     * GET /rest/api/3/project/{projectKeyOrId}/securitylevel
     *
     * Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg) levels for the project that the user has access to.

    This operation can be accessed anonymously.

     **[Permissions](#permissions) required:** *Browse projects* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project, however, issue security levels are only returned for authenticated user with *Set Issue Security* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project.
     * @param projectKeyOrId The project ID or project key (case sensitive).  (example: null)
     *
     * @return ProjectIssueSecurityLevels
     */
    @GET("/rest/api/3/project/{projectKeyOrId}/securitylevel")
    suspend fun getSecurityLevelsForProject(
        @Body projectKeyOrId: String
    ): ProjectIssueSecurityLevels
}