/**
 * ⚠️ Do not edit manually ⚠️
 * Generated by openapi-generate. See project's `openapi-generate.sh` for details
 */
package jira.api.apis

import jira.api.models.CreateResolutionDetails
import jira.api.models.PageBeanResolutionJsonBean
import jira.api.models.Resolution
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.Query

interface IssueResolutionsApi {

    /**
     * POST /rest/api/3/resolution
     *
     * Creates an issue resolution.

     **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param createResolutionDetails, request body
     *
     * @return Unit
     */
    @POST("/rest/api/3/resolution")
    suspend fun createResolution(
        @Body createResolutionDetails: CreateResolutionDetails
    ): Unit

    /**
     * GET /rest/api/3/resolution/{id}
     *
     * Returns an issue resolution value.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param id The ID of the issue resolution value.  (example: null)
     *
     * @return Resolution
     */
    @GET("/rest/api/3/resolution/{id}")
    suspend fun getResolution(
        @Body id: String
    ): Resolution

    /**
     * GET /rest/api/3/resolution
     *
     * Returns a list of all issue resolution values.

     **[Permissions](#permissions) required:** Permission to access Jira.
     *
     * @return List<Resolution>
     */
    @GET("/rest/api/3/resolution")
    suspend fun getResolutions(): List<Resolution>

    /**
     * GET /rest/api/3/resolution/search
     *
     * Returns a [paginated](#pagination) list of resolutions. The list can contain all resolutions or a subset determined by any combination of these criteria:

     *  a list of resolutions IDs.
     *  whether the field configuration is a default. This returns resolutions from company-managed (classic) projects only, as there is no concept of default resolutions in team-managed projects.

     **[Permissions](#permissions) required:** Permission to access Jira.
     * @param startAt The index of the first item to return in a page of results (page offset). (optional) (example: null)
     * @param maxResults The maximum number of items to return per page. (optional) (example: null)
     * @param id The list of resolutions IDs to be filtered out (optional) (example: null)
     * @param onlyDefault When set to true, return default only, when IDs provided, if none of them is default, return empty page. Default value is false (optional) (example: null)
     *
     * @return PageBeanResolutionJsonBean
     */
    @GET("/rest/api/3/resolution/search")
    suspend fun searchResolutions(
        @Query("startAt") startAt: String = "0",
        @Query("maxResults") maxResults: String = "50",
        @Query("id") id: List<String>? = null,
        @Query("onlyDefault") onlyDefault: Boolean = false
    ): PageBeanResolutionJsonBean
}